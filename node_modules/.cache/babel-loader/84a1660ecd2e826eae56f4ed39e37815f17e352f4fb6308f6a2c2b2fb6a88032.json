{"ast":null,"code":"var _jsxFileName = \"/Users/eunjin/Desktop/E-commerce/frontend/src/Context/ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport all_product from '../Components/Assets/all_product';\n\n// 상품 정보 저장을 위한 ShopContext 생성 및 자식 컴포넌트 렌더링\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\n\n// 장바구니 기능 생성\nconst getDefaultCart = () => {\n  let cart = {}; // 처음에는 빈 객체로 수량을 담을 장바구니 생성\n  for (let index = 0; index < all_product.length + 1; index++) {\n    cart[index] = 0; // 배열(상품정보) 길이만큼 반복문 실행 => 모든 상품 초기 수량을 cart에 0으로 설정 \n  }\n  return cart; // 초기화된 장바구니 상태 반환\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart()); //cartItems = 현재 장바구니의 상태. 초기 cartItems = getDefaultCart\n  // console.log(cartItems); // 장바구니 배열의 key-value pair가 0으로 설정된 것을 알 수 있음\n\n  // 장바구니 추가\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n  };\n\n  // 장바구니 삭제\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n      return totalAmount;\n    }\n  };\n  const contextValue = {\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  }; // ShopContext에 상품 정보/장바구니 정보 저장, props로 내려줌\n\n  // 하위 컴포넌트에서 ShopContext를 이용하여 상품 정보에 접근\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: [props.children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"POXtcbMWIUF6U9Hbv2D9xpykgJ8=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","all_product","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","length","ShopContextProvider","props","_s","cartItems","setCartItems","addToCart","itemId","prev","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eunjin/Desktop/E-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\nimport all_product from '../Components/Assets/all_product'\n\n// 상품 정보 저장을 위한 ShopContext 생성 및 자식 컴포넌트 렌더링\nexport const ShopContext = createContext(null);\n\n// 장바구니 기능 생성\nconst getDefaultCart = () => {\n    let cart = {}; // 처음에는 빈 객체로 수량을 담을 장바구니 생성\n    for (let index = 0; index < all_product.length+1; index++) {\n        cart[index] = 0; // 배열(상품정보) 길이만큼 반복문 실행 => 모든 상품 초기 수량을 cart에 0으로 설정 \n    }\n    return cart; // 초기화된 장바구니 상태 반환\n}\n\nconst ShopContextProvider = ( props ) => {\n    const [cartItems, setCartItems] = useState(getDefaultCart()); //cartItems = 현재 장바구니의 상태. 초기 cartItems = getDefaultCart\n    // console.log(cartItems); // 장바구니 배열의 key-value pair가 0으로 설정된 것을 알 수 있음\n\n    // 장바구니 추가\n    const addToCart = (itemId) => {\n        setCartItems((prev) => ({...prev, [itemId]:prev[itemId]+1}))\n    }\n\n    // 장바구니 삭제\n    const removeFromCart = (itemId) => {\n        setCartItems((prev) => ({...prev, [itemId]:prev[itemId]-1}))\n    }\n\n    const getTotalCartAmount = () => {\n        let totalAmount = 0;\n        for(const item in cartItems) {\n            if(cartItems[item]>0)\n            {\n                let itemInfo = all_product.find((product) => product.id===Number(item))\n                totalAmount += itemInfo.new_price * cartItems[item];\n            }\n            return totalAmount;\n        }\n    }\n\n    const contextValue = {getTotalCartAmount, all_product, cartItems, addToCart, removeFromCart}; // ShopContext에 상품 정보/장바구니 정보 저장, props로 내려줌\n\n    // 하위 컴포넌트에서 ShopContext를 이용하여 상품 정보에 접근\n    return (\n        <ShopContext.Provider value={contextValue}> \n            {props.children} {/* 컴포넌트의 자식 컴포넌트들을 렌더링함 */}\n        </ShopContext.Provider> \n    )\n}\n\nexport default ShopContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,WAAW,MAAM,kCAAkC;;AAE1D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;;AAE9C;AACA,MAAMM,cAAc,GAAGA,CAAA,KAAM;EACzB,IAAIC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;EACf,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGN,WAAW,CAACO,MAAM,GAAC,CAAC,EAAED,KAAK,EAAE,EAAE;IACvDD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;EACrB;EACA,OAAOD,IAAI,CAAC,CAAC;AACjB,CAAC;AAED,MAAMG,mBAAmB,GAAKC,KAAK,IAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D;;EAEA;EACA,MAAMS,SAAS,GAAIC,MAAM,IAAK;IAC1BF,YAAY,CAAEG,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAEC,IAAI,CAACD,MAAM,CAAC,GAAC;IAAC,CAAC,CAAC,CAAC;EAChE,CAAC;;EAED;EACA,MAAME,cAAc,GAAIF,MAAM,IAAK;IAC/BF,YAAY,CAAEG,IAAI,KAAM;MAAC,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAEC,IAAI,CAACD,MAAM,CAAC,GAAC;IAAC,CAAC,CAAC,CAAC;EAChE,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAI,MAAMC,IAAI,IAAIR,SAAS,EAAE;MACzB,IAAGA,SAAS,CAACQ,IAAI,CAAC,GAAC,CAAC,EACpB;QACI,IAAIC,QAAQ,GAAGpB,WAAW,CAACqB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAGC,MAAM,CAACL,IAAI,CAAC,CAAC;QACvED,WAAW,IAAIE,QAAQ,CAACK,SAAS,GAAGd,SAAS,CAACQ,IAAI,CAAC;MACvD;MACA,OAAOD,WAAW;IACtB;EACJ,CAAC;EAED,MAAMQ,YAAY,GAAG;IAACT,kBAAkB;IAAEjB,WAAW;IAAEW,SAAS;IAAEE,SAAS;IAAEG;EAAc,CAAC,CAAC,CAAC;;EAE9F;EACA,oBACId,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,GACrCpB,KAAK,CAACoB,QAAQ,EAAC,GAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAE/B,CAAC;AAAAvB,EAAA,CAlCKF,mBAAmB;AAAA0B,EAAA,GAAnB1B,mBAAmB;AAoCzB,eAAeA,mBAAmB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}